{"version":3,"sources":["img/europe_cont.png","EuropeCont.js","index.js"],"names":["module","exports","EuropeCont","props","state","countries","showStateInfo","name","nativeName","capital","population","region","subRegion","language","about","image","area","timezones","wiki","images","viewFullImgState","countryImg","countryFullImg","countryFlag","openAbout","chart","am4core","am4maps","self","this","img_loader","document","querySelector","geodata","am4geodata_worldLow","projection","Miller","polygonSeries","series","push","useGeodata","polygonTemplate","mapPolygons","template","tooltipText","fill","responsive","enabled","zoomOnDoubleClick","states","create","properties","fetch","then","res","json","JSON","stringify","setState","events","on","ev","openCountryInfo","evName","target","dataItem","dataContext","id","flag","style","display","parse","az","results","arrImg","i","urls","small","full","resp","zoomToMapObject","cac","getTimeZones","prevState","toString","replace","subregion","languages","wikiName","window","open","countryStateInfo","closeStateInfoIcon","openStateInfo","setTimeout","width","className","onClick","viewFullImg","src","title","alt","aria-label","closeCountryInfo","openStateInfoArrow","map","item","index","key","length","openWiki","href","require","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.feb4f9d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/europe_cont.43acfcc8.png\";","import React from 'react';\nimport './css/main.css';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/region/world/europeUltra\";\n\n \n\nclass EuropeCont extends React.Component {\n  constructor(props) {\n    super(props);\n\n              this.state = { \n                  countries: null,\n\n                  showStateInfo: [ {\n\n                                name: '',\n                                nativeName: '',\n                                capital: '',\n                                population: '',\n                                region: '',\n                                subRegion: '',\n                                language: '',\n                                about: null,\n                                image: null,\n                                area: null\n\n                                  }\n                                ],\n                                timezones: [],\n                                wiki: [],\n                                images: [],\n                                viewFullImgState: false,\n                                countryImg: '',\n                                countryFullImg: '',\n                                countryFlag: '',\n                                openAbout: false,\n                           }\n                  \n                      }\n \n\n\n componentDidMount() {\n   let chart = am4core.create(\"chartdiv\", am4maps.MapChart);\n   let self = this;\n    let img_loader = document.querySelector('.img_loader');\n\n\n    // Set map definition\n       chart.geodata = am4geodata_worldLow;\n\n    // Set projection\n       chart.projection = new am4maps.projections.Miller();\n\n    // Create map polygon series\n        let polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n    // Make map load polygon (like country names) data from GeoJSON\n        polygonSeries.useGeodata = true;\n\n    // Configure series\n        let polygonTemplate = polygonSeries.mapPolygons.template;\n        polygonTemplate.tooltipText = \"{name}\";\n        polygonTemplate.fill = am4core.color(\"#74B266\");\n        chart.responsive.enabled = true;\n        chart.zoomOnDoubleClick = false;\n     \n    // Create hover state and set alternative fill color\n        let hs = polygonTemplate.states.create(\"hover\");\n        hs.properties.fill = am4core.color(\"#367B25\");\n \n    // Get info for all countries\n\n      fetch('https://restcountries-v1.p.rapidapi.com/all', {\n        \"method\": \"GET\",\n        \"headers\": ({\n          \"x-rapidapi-host\": \"restcountries-v1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"59f67f4fc3mshefbad1a9049e04bp1fc2f3jsn226af0858736\"\n          })\n      })\n      .then(res => res.json())\n      .then(res => JSON.stringify(res))\n      .then(res => self.setState({ countries: res}))\n\n\n    // Listener for selected country\n        polygonTemplate.events.on(\"hit\", function(ev) {\n    // open view country info div\n        self.openCountryInfo();\n    // hide about div if displayed\n       if(self.state.openAbout) {\n           self.setState({ openAbout: false })\n       }\n    // country name\n        let evName = ev.target.dataItem.dataContext.name;\n    // country id\n        let id = ev.target.dataItem.dataContext.id;\n\n    // Get the country flag\n         fetch('https://restcountries.eu/rest/v2/alpha/'+id, {\n          \"method\": \"GET\"\n         })\n        .then(res => res.json())\n        .then(res => self.setState({ countryFlag: res.flag }))\n\n    // display loading image effect\n            img_loader.style.display = 'block';\n    // get an image for the country -> unsplash\n         fetch('https://api.unsplash.com/search/photos?page=1&client_id=acc065f731f1ce6abb0a114f8404e28db5ee228b35ea8ae5285afc2967f0372d&query='+evName)\n        .then(res => res.json())\n        .then(res => JSON.stringify(res))\n        .then(res => JSON.parse(res))\n        .then(res => self.setState({ images: res}))\n    // call the function to set the image country\n        .then(function() {\n    // hide the loading image effect\n           img_loader.style.display = 'none';\n          // set country image\n           let az = self.state.images.results;\n           let arrImg = [];\n\n     // search inside object array and get small and full img sizes\n           for(let i in az) {\n           arrImg.push(az[i].urls.small, az[i].urls.full);\n           }\n          self.setState({\n          countryImg: arrImg[0],\n          countryFullImg: arrImg[1]\n          })\n\n        })\n\n    // get info for the country -> wikipedia\n\n        fetch(\"https://en.wikipedia.org/w/api.php?&origin=*&action=opensearch&search=\"+evName+\"&limit=3\")\n            .then(function(resp) {\n              return resp.json()\n             })\n            .then(resp => self.setState({ wiki: resp[2]}))\n\n    // zoom on click\n       chart.zoomToMapObject(ev.target)       \n    // map inside the info countries to be displayed on the info box\n       let cac = JSON.parse(self.state.countries);\n\n          for(let i in cac) {\n              // if ev === cac[i] info country, set state\n             if(cac[i].name === evName) {\n                \n                let getTimeZones = [];\n               \n               self.setState(prevState => ({\n                  showStateInfo: [{\n                    ...prevState.showStateInfo,\n                    name: cac[i].name,\n                    nativeName: cac[i].nativeName,\n                    capital: cac[i].capital,\n                    population: cac[i].population.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n                    region: cac[i].region,\n                    subRegion: cac[i].subregion,\n                    language: cac[i].languages,\n                    area: cac[i].area ? cac[i].area.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : \" -\"\n                  \n                  }]\n               }))\n\n               getTimeZones.push(cac[i].timezones);\n\n                self.setState({\n                  timezones: getTimeZones[0]\n                })\n             \n                }\n          }\n     \n    });\n\n        // Hide sponsored map creator\n    document.querySelector('[aria-labelledby=\"id-72-title\"]').style.display = 'none';\n\n}\n\nopenWiki() {\n  let name = this.state.showStateInfo;\n  let wikiName = '';\n      for(let i in name) {\n        wikiName = name[i].name;\n      }\n  // open a new tab and go the wikipedia country page\n      window.open('https://en.wikipedia.org/wiki/'+wikiName, '_blank');\n}\n \n \nopenAbout() {\n    // display / hide about box\n this.setState({\n    openAbout: !this.state.openAbout\n  })\n}\n\nopenCountryInfo() {\n   let countryStateInfo = document.querySelector('.wrap_state_info'),\n       closeStateInfoIcon = document.querySelector('.close_wrap_state_info'),\n       openStateInfo = document.querySelector('.open_wrap_state_info');\n\n       // open country info div with delay of 5sec.\n          setTimeout(function() {\n            openStateInfo.style.display = 'none';\n            countryStateInfo.style.width = '360px';\n            closeStateInfoIcon.style.display = 'block';\n          },500);\n  \n}\n\ncloseCountryInfo() {\n       let countryStateInfo = document.querySelector('.wrap_state_info'),\n           closeStateInfoIcon = document.querySelector('.close_wrap_state_info'),\n           openStateInfo = document.querySelector('.open_wrap_state_info');\n\n          // close country info div with delay of 5sec.\n            setTimeout(function() {\n            countryStateInfo.style.width = '0';\n            openStateInfo.style.display = 'block';\n            closeStateInfoIcon.style.display = 'none';\n          },500);\n}\n\n \nopenStateInfoArrow() {\n      let countryStateInfo = document.querySelector('.wrap_state_info'),\n          closeStateInfoIcon = document.querySelector('.close_wrap_state_info'),\n          openStateInfo = document.querySelector('.open_wrap_state_info');\n\n           // open country info div with delay of 5sec.\n              setTimeout(function() {\n                 openStateInfo.style.display = 'none';\n                countryStateInfo.style.width = '360px';\n                closeStateInfoIcon.style.display = 'block';\n              },500);\n}\n\nviewFullImg() {\n  // hide / display full country image\n  this.setState({\n    viewFullImgState: !this.state.viewFullImgState\n  })\n}\n\n\n  render() {\n    return (\n\n          <div>\n            <div className='container-fluid p-0 m-0'>\n         \n                {/* ---- Map container ----- */}\n\n                <div id='chartdiv' className='col-12'></div>\n\n\n                {/* ---- Backdrop & full image view container ----- */}\n\n                  {this.state.viewFullImgState ? (\n                      <div className='row'>\n                        <div className='col-12 bgdrop_modal' onClick={() => this.viewFullImg()}>\n\n                            <div className='row justify-content-center'>\n                              <div id='country_photo_viewer' className='col-md-11 col-lg-10 col-xl-8'>\n                                <img src={this.state.countryFullImg} title='' alt=''/>\n                              </div>\n                            </div>\n\n                        </div>\n                      </div>\n                    ) : ('')}\n\n\n\n\n                  {/* ---- Info left container ----- */}\n\n                     {/* --- Close / Hide info state arrow --- */}\n\n                <div \n                  className='close_wrap_state_info' \n                  title='Close info' \n                  aria-label='close country info'\n                  onClick={() => this.closeCountryInfo()}>\n                    &#171; \n                </div>\n\n                <div \n                  className='open_wrap_state_info' \n                  title='Open info' \n                  aria-label='open country info'\n                  onClick={() => this.openStateInfoArrow()}>\n                   &#187; \n                </div>\n               \n\n                 <div className='wrap_state_info'>\n                   <div className='row'>\n                     <div className='wrapper_state_info'>\n\n\n                  {/* ------ Display info about country ------- */}\n\n\n                  {this.state.showStateInfo.map((item,index) => {\n                      return (\n                          <ul key={index}>\n\n                                {/* ---- Li Country photo ----- */}\n\n                               <li className='li_country_photo'>\n\n                                    <span className='row rowz'>\n                                      <span className='zoom_img_icon'  aria-label='view full image' onClick={() => this.viewFullImg()}></span>\n                                    </span>\n\n                                    <span className='row justify-content-center'>\n                                        <span className=\"img_loader\"><span></span><span></span><span></span></span>\n                                    </span>\n\n                                    {this.state.countryImg ? (\n                                         <img className='country_photo' \n                                         alt=''\n                                         src={this.state.countryImg}/>\n                                    ) : ('')}\n                                    \n                               </li>\n\n\n                              {/* ---- Flag Country ----- */}\n\n                               <li>\n                                  <span className='row justify-content-center'>\n                                    <img src={this.state.countryFlag} title={item.name} alt=''  aria-label='country flag' className='country_flag'/>\n                                  </span>\n                               </li>\n\n                                  <span className='hz_line'></span>\n                                  <br />\n\n\n                                <li className='li_info li_info_name' aria-label='country name'>Name: <span>{item.name}</span> </li>\n                                <li className='li_info' aria-label='native name'>Native name: <span>{item.nativeName}</span></li>\n                                <li className='li_info' aria-label='capital'>Capital: <span>{item.capital}</span></li>\n                                <li className='li_info' aria-label='population number'>Population: <span>{item.population}</span></li>\n                                <li className='li_info' aria-label='region'>Region: <span>{item.region}</span></li>\n                                <li className='li_info' aria-label='subregion'>Subregion: <span>{item.subRegion}</span></li>\n                                <li className='li_info' aria-label='country language'>Language: <span>{item.language[0]}</span></li>\n\n\n\n                                   {/* ---- Li Area Country ----- */}\n\n                                <li className='li_info li_info_area' aria-label='country area'>Area: \n                                    <span>{item.area ? ( \n                                      <span> {item.area}</span> \n                                      ) : ('')}\n                                    </span>\n                                    <span> km2</span>\n                                </li>\n\n\n\n\n                                  {/* ---- Display timezones from array ---- */}\n\n                                <li className='li_info li_info_timezone' aria-label='timezone'>Timezone: \n                                    {this.state.timezones.map((item,index) => {\n                                      return (\n                                          <span className='span_timezone' key={index}> {item} </span>\n                                      )\n                                    })}\n                                </li>\n\n                                  <span className='hz_line'></span>\n\n\n\n\n                                  {/* ---- Li About Wiki ----- */}\n\n                                 <li className='li_info li_info_about' aria-label='about country'>About:\n                                                                      \n                                      {this.state.wiki.length !== 0 ? (\n                                          <span className='wiki_link' \n                                            title='See more about' \n                                            aria-label='see more about this country on wikipedia' \n                                            onClick={()=> this.openWiki()}>\n                                            ( Wikipedia )\n                                          </span>\n                                        ) : ('')}\n\n\n                                      {this.state.wiki.length !== 0 ? (\n                                     \n                                     <span className='item_about_scroll'></span>\n                                        ) : ('')}\n                                 </li>\n\n                                 <li className='li_about'>\n                                    <label className='item_about_label' aria-label={this.state.wiki}>{this.state.wiki}</label>\n                                 </li>\n\n                                 \n                         </ul>\n                       )\n                  })}\n\n               \n                   </div>\n                </div>\n              </div>\n\n              {/* ---- Credits / About Section ----- */}\n\n                    <div className='row'>\n                      <div className='about_row'>\n                        <span aria-label='go to ionutdev.com'><a href='http://ionutdev.com'>@ionutdev.com</a>, 2019 - </span>\n                        <span onClick={() => this.openAbout()}>About</span>\n                       </div>\n                    </div>\n\n\n                    {this.state.openAbout ? (\n\n                      <div className='about_div'>\n                        <div className='about_div_bubble'>\n                             <span className='close_about' onClick={() => this.openAbout()}>&times;</span>\n\n                             <img src={require('./img/europe_cont.png')} title='' alt=''/>\n\n                             <div className='row justify-content-center'>\n                                  <div className='about_txt'>\n                                        <p>API content info:</p>\n                                        <span><a href='http://amcharts.com'>Amcharts.com</a></span>\n                                        <span><a href='http://rapidapi.com'>RapidAPI.com</a></span>\n                                        <span><a href='http://unsplash.com'>Unsplash.com</a></span>\n                                        <span><a href='http://wikipedia.org'>Wikipedia.org</a></span>\n                                  </div>\n                              </div>\n                            </div>\n                         </div>\n\n                    ) : ('')}\n\n             </div>\n          </div>\n      )\n   }\n}\n\nexport default EuropeCont;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EuropeCont from './EuropeCont';\n \n\n \n\nReactDOM.render(<EuropeCont />, document.getElementById('root'));\n\n \n"],"sourceRoot":""}